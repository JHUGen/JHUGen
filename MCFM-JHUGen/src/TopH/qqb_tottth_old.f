      subroutine qqb_tottth_old(p,msq)
      implicit none
************************************************************************
*     Author: R.K. Ellis                                               *
*     December, 1999.                                                  *
*     calculate the element squared 
*     for the process                                                  *
c----My notation                                                       *
C     q(-p1) +qbar(-p2)=t(p3)+t(p4)+h(p5)
C  
************************************************************************
      include 'constants.f'
      include 'ewcouple.f'
      include 'qcdcouple.f'
      include 'couple.f'
      include 'part.f'
      include 'masses.f'
      include 'msbarmasses.f'
      include 'first.f'
      
      integer j,k
      double precision msq(-nf:nf,-nf:nf),p(mxpart,4)
      double precision wtqqb,wtgg,massfrun,mt_eff
      double precision dot,DHQQ,DHGG,facqq,facgg,X12,X13,X14,X23,X24
      save mt_eff
!$omp threadprivate(mt_eff) 
      if (first) then
c--- run mt to appropriate scale
        if (part .eq. 'lord') then
          mt_eff=massfrun(mt_msbar,hmass,amz,1)
        else
          mt_eff=massfrun(mt_msbar,hmass,amz,2)
        endif
        first=.false.
      endif





      x12=+2d0*dot(p,1,2)
      x13=+2d0*dot(p,1,3)
      x14=+2d0*dot(p,1,4)
      x23=+2d0*dot(p,2,3)
      x24=+2d0*dot(p,2,4)

      wtqqb=DHQQ(X12,X13,X14,X23,X24)
      wtgg=DHGG(X12,X13,X14,X23,X24)
      facqq=V/4d0*gsq**2*gwsq*mt_eff**2/wmass**2/4d0
      facgg=facqq*4d0/3d0
C----set all elements to zero
      do j=-nf,nf
      do k=-nf,nf
      msq(j,k)=0d0
      enddo
      enddo

C---fill qb-q, gg and q-qb elements
      do j=-nf,nf
      if (j .lt. 0) then
          msq(j,-j)=aveqq*facqq*wtqqb
      elseif (j .eq. 0) then
          msq(j,j)=avegg*facgg*wtgg
      elseif (j .gt. 0) then
          msq(j,-j)=aveqq*facqq*wtqqb
      endif
      enddo
      return
      end
 
      DOUBLE PRECISION FUNCTION DHQQ(X12,X13,X14,X23,X24)
C--QQBAR MATRIX ELEMENT FOR SCALAR HIGGS BOSONS
      IMPLICIT NONE
C----Matrix element taken from Spira's Program,
C  For references see,
C  Z. Kunszt, Nucl. Phys. B247 (1984) 339;
C  J.F. Gunion, Phys. Lett. B253 (1991) 269;
C  W.J. Marciano and F.E. Paige, Phys. Rev. Lett. 66 (1991) 2433;
C  D.A. Dicus and S. Willenbrock, Phys. Rev. D39 (1989) 751;
C  M. Spira, Fortschr. Phys. 46 (1998) 203.
      include 'masses.f'
      DOUBLE PRECISION X12,X13,X14,X23,X24,N12,N35,N45,M,MH,RES
      N12 = 1/X12
      N35 = 1/(X12+X14+X24)
      N45 = 1/(X12+X13+X23)
      M = mt
      MH = hmass

      RES =
     +  - 96*M**2*MH**2*N35*N45*X12 - 16*M**2*MH**2*N35**2*X12 - 16*
     + M**2*MH**2*N45**2*X12 - 64*M**2*N35*N45*X12*X13 - 64*M**2*N35*
     + N45*X12*X14 - 128*M**2*N35*N45*X13*X14 + 64*M**2*N35*X12 + 64*
     + M**2*N35**2*X12*X14 + 32*M**2*N35**2*X12**2 + 64*M**2*N35**2*
     + X14**2 + 64*M**2*N45*X12 + 64*M**2*N45**2*X12*X13 + 32*M**2*
     + N45**2*X12**2 + 64*M**2*N45**2*X13**2 + 128*M**4*N35*N45*X12 + 
     + 64*M**4*N35**2*X12 + 64*M**4*N45**2*X12 + 16*MH**2*N35*N45*X12*
     + X13 + 16*MH**2*N35*N45*X12*X14 + 16*MH**2*N35*N45*X12**2 + 32*
     + MH**2*N35*N45*X13*X14 - 16*MH**2*N35*X12 - 16*MH**2*N35**2*X12*
     + X14 - 8*MH**2*N35**2*X12**2 - 16*MH**2*N35**2*X14**2 - 16*MH**2*
     + N45*X12 - 16*MH**2*N45**2*X12*X13 - 8*MH**2*N45**2*X12**2 - 16*
     + MH**2*N45**2*X13**2 + 16*MH**4*N35*N45*X12 + 32*N35*N45*X12*X13*
     + X14 + 16*N35*N45*X12*X13**2 + 16*N35*N45*X12*X14**2 + 32*N35*N45
     + *X12**2*X13 + 32*N35*N45*X12**2*X14 + 16*N35*N45*X12**3 - 8*N35*
     + X12*X13
      RES = RES - 16*N35*X12*X14 + 8*N35*X12*X23 - 8*N35*X12**2 - 16*
     + N45*X12*X13 - 8*N45*X12*X14 + 8*N45*X12*X24 - 8*N45*X12**2 + 16*
     + X12

      DHQQ = RES*N12**2

      RETURN
      END

      DOUBLE PRECISION FUNCTION DHGG(X12,X13,X14,X23,X24)
C--GG MATRIX ELEMENT FOR SCALAR HIGGS BOSONS
C----Matrix element taken from Spira's Program,
C  For references see,
C  Z. Kunszt, Nucl. Phys. B247 (1984) 339;
C  J.F. Gunion, Phys. Lett. B253 (1991) 269;
C  W.J. Marciano and F.E. Paige, Phys. Rev. Lett. 66 (1991) 2433;
C  D.A. Dicus and S. Willenbrock, Phys. Rev. D39 (1989) 751;
C  M. Spira, Fortschr. Phys. 46 (1998) 203.

      IMPLICIT NONE
      include 'masses.f'
      DOUBLE PRECISION X12,X13,X14,X23,X24,M,MH,RES
      DOUBLE PRECISION N12,N13,N14,N23,N24,N35,N45
      N12 = 1/X12
      N13 = 1/X13
      N14 = 1/X14
      N23 = 1/X23
      N24 = 1/X24
      N35 = 1/(X12+X14+X24)
      N45 = 1/(X12+X13+X23)
      M = mt
      MH = hmass

      RES =
     + 108*M**2*MH**2*N12*N13*N24*N35*X14 - 8*M**2*MH**2*N12*N13*N24*
     + N35*X23 - 72*M**2*MH**2*N12*N13*N24*N45*X14 - 324*M**2*MH**2*N12
     + *N13*N24 + 64*M**2*MH**2*N12*N13*N24**2*N35*X14*X23 - 64*M**2*
     + MH**2*N12*N13*N24**2*X23 + 72*M**2*MH**2*N12*N13*N35*N45*X14 - 
     + 108*M**2*MH**2*N12*N13*N35 - 72*M**2*MH**2*N12*N13*N45 - 72*M**2
     + *MH**2*N12*N14*N23*N35*X13 + 108*M**2*MH**2*N12*N14*N23*N45*X13
     +  - 8*M**2*MH**2*N12*N14*N23*N45*X24 - 324*M**2*MH**2*N12*N14*N23
     +  + 64*M**2*MH**2*N12*N14*N23**2*N45*X13*X24 - 64*M**2*MH**2*N12*
     + N14*N23**2*X24 + 72*M**2*MH**2*N12*N14*N35*N45*X13 - 72*M**2*
     + MH**2*N12*N14*N35 - 108*M**2*MH**2*N12*N14*N45 - 432*M**2*MH**2*
     + N12*N23*N35*N45*X13 - 72*M**2*MH**2*N12*N23*N35*N45*X14 + 216*
     + M**2*MH**2*N12*N23*N35 + 92*M**2*MH**2*N12*N23*N45 - 92*M**2*
     + MH**2*N12*N23*N45**2*X13 - 72*M**2*MH**2*N12*N24*N35*N45*X13 - 
     + 432*M**2*MH**2*N12*N24*N35*N45*X14 + 92*M**2*MH**2*N12*N24*N35
     +  - 92*M**2*MH**2*N12*N24*N35**2*X14
      RES = RES + 216*M**2*MH**2*N12*N24*N45 + 864*M**2*MH**2*N12*N35*
     + N45 + 52*M**2*MH**2*N12*N35**2 + 52*M**2*MH**2*N12*N45**2 - 40*
     + M**2*MH**2*N13*N14*N23*N24*X12 - 4*M**2*MH**2*N13*N14*N23*N45*
     + X12 - 8*M**2*MH**2*N13*N14*N23*N45*X24 - 52*M**2*MH**2*N13*N14*
     + N23 - 4*M**2*MH**2*N13*N14*N24*N35*X12 - 8*M**2*MH**2*N13*N14*
     + N24*N35*X23 - 52*M**2*MH**2*N13*N14*N24 + 40*M**2*MH**2*N13*N14*
     + N35*N45*X12 - 52*M**2*MH**2*N13*N14*N35 - 52*M**2*MH**2*N13*N14*
     + N45 - 4*M**2*MH**2*N13*N23*N24*N45*X12 - 8*M**2*MH**2*N13*N23*
     + N24*N45*X14 - 52*M**2*MH**2*N13*N23*N24 - 24*M**2*MH**2*N13*N23*
     + N45 + 8*M**2*MH**2*N13*N23*N45**2*X12 + 96*M**2*MH**2*N13*N24*
     + N35*N45*X12 + 32*M**2*MH**2*N13*N24*N35*N45*X14 + 392*M**2*MH**2
     + *N13*N24*N35 + 156*M**2*MH**2*N13*N24*N45 + 96*M**2*MH**2*N13*
     + N24**2*N35*X12 + 96*M**2*MH**2*N13*N24**2*N35*X14 + 64*M**2*
     + MH**2*N13*N24**2*N35*X23 - 32*M**2*MH**2*N13*N24**2 + 472*M**2*
     + MH**2*N13*N35*N45 + 72*M**2*MH**2*N13*N45**2 + 64*M**2*MH**2*
     + N13**2*N24
      RES = RES + 64*M**2*MH**2*N13**2*N45 - 4*M**2*MH**2*N14*N23*N24*
     + N35*X12 - 8*M**2*MH**2*N14*N23*N24*N35*X13 - 52*M**2*MH**2*N14*
     + N23*N24 + 96*M**2*MH**2*N14*N23*N35*N45*X12 + 32*M**2*MH**2*N14*
     + N23*N35*N45*X13 + 156*M**2*MH**2*N14*N23*N35 + 392*M**2*MH**2*
     + N14*N23*N45 + 96*M**2*MH**2*N14*N23**2*N45*X12 + 96*M**2*MH**2*
     + N14*N23**2*N45*X13 + 64*M**2*MH**2*N14*N23**2*N45*X24 - 32*M**2*
     + MH**2*N14*N23**2 - 24*M**2*MH**2*N14*N24*N35 + 8*M**2*MH**2*N14*
     + N24*N35**2*X12 + 472*M**2*MH**2*N14*N35*N45 + 72*M**2*MH**2*N14*
     + N35**2 + 64*M**2*MH**2*N14**2*N23 + 64*M**2*MH**2*N14**2*N35 - 
     + 64*M**2*MH**2*N23*N24*N35*N45*X12 - 52*M**2*MH**2*N23*N24*N35*
     + N45*X13 - 52*M**2*MH**2*N23*N24*N35*N45*X14 - 116*M**2*MH**2*N23
     + *N35*N45 - 52*M**2*MH**2*N23*N45**2 + 96*M**2*MH**2*N23**2*N45
     +  - 32*M**2*MH**2*N23**2*N45**2*X12 - 32*M**2*MH**2*N23**2*N45**2
     + *X13 - 116*M**2*MH**2*N24*N35*N45 - 52*M**2*MH**2*N24*N35**2 + 
     + 96*M**2*MH**2*N24**2*N35 - 32*M**2*MH**2*N24**2*N35**2*X12 - 32*
     + M**2*MH**2*N24**2*N35**2*X14
      RES = RES + 32*M**2*MH**4*N13*N14*N23*N24 + 8*M**2*MH**4*N13*N14*
     + N23*N45 + 8*M**2*MH**4*N13*N14*N24*N35 + 32*M**2*MH**4*N13*N14*
     + N35*N45 + 8*M**2*MH**4*N13*N23*N24*N45 - 256*M**2*MH**4*N13*N24*
     + N35*N45 - 64*M**2*MH**4*N13*N24**2*N35 - 64*M**2*MH**4*N13**2*
     + N24*N45 + 8*M**2*MH**4*N14*N23*N24*N35 - 256*M**2*MH**4*N14*N23*
     + N35*N45 - 64*M**2*MH**4*N14*N23**2*N45 - 64*M**2*MH**4*N14**2*
     + N23*N35 + 32*M**2*MH**4*N23*N24*N35*N45 - 34*M**2*N12*N13*N24*
     + N35*X14*X23 + 6*M**2*N12*N13*N24*N35*X14**2 + 138*M**2*N12*N13*
     + N24*X14 + 202*M**2*N12*N13*N24*X23 - 32*M**2*N12*N13*N24**2*N35*
     + X14**2*X23 + 32*M**2*N12*N13*N24**2*X14*X23 - 138*M**2*N12*N13*
     + N35*X14 + 86*M**2*N12*N13*N35*X23 + 288*M**2*N12*N13 - 34*M**2*
     + N12*N14*N23*N45*X13*X24 + 6*M**2*N12*N14*N23*N45*X13**2 + 138*
     + M**2*N12*N14*N23*X13 + 202*M**2*N12*N14*N23*X24 - 32*M**2*N12*
     + N14*N23**2*N45*X13**2*X24 + 32*M**2*N12*N14*N23**2*X13*X24 - 138
     + *M**2*N12*N14*N45*X13 + 86*M**2*N12*N14*N45*X24 + 288*M**2*N12*
     + N14
      RES = RES + 72*M**2*N12*N23*N35*N45*X13*X14 + 52*M**2*N12*N23*N35
     + *N45*X13**2 + 92*M**2*N12*N23*N35*X13 - 72*M**2*N12*N23*N35*X14
     +  + 52*M**2*N12*N23*N45*X13 - 14*M**2*N12*N23*N45*X14 - 74*M**2*
     + N12*N23*N45*X24 + 14*M**2*N12*N23*N45**2*X13*X14 + 42*M**2*N12*
     + N23*N45**2*X13*X24 + 46*M**2*N12*N23*N45**2*X13**2 + 190*M**2*
     + N12*N23 - 96*M**2*N12*N23**2*N45*X13*X24 + 32*M**2*N12*N23**2*
     + N45**2*X13**2*X24 + 64*M**2*N12*N23**2*X24 + 72*M**2*N12*N24*N35
     + *N45*X13*X14 + 52*M**2*N12*N24*N35*N45*X14**2 - 14*M**2*N12*N24*
     + N35*X13 + 52*M**2*N12*N24*N35*X14 - 74*M**2*N12*N24*N35*X23 + 14
     + *M**2*N12*N24*N35**2*X13*X14 + 42*M**2*N12*N24*N35**2*X14*X23 + 
     + 46*M**2*N12*N24*N35**2*X14**2 - 72*M**2*N12*N24*N45*X13 + 92*
     + M**2*N12*N24*N45*X14 + 190*M**2*N12*N24 - 96*M**2*N12*N24**2*N35
     + *X14*X23 + 32*M**2*N12*N24**2*N35**2*X14**2*X23 + 64*M**2*N12*
     + N24**2*X23 + 556*M**2*N12*N35*N45*X13 + 556*M**2*N12*N35*N45*X14
     +  - 622*M**2*N12*N35 + 14*M**2*N12*N35**2*X13 - 242*M**2*N12*
     + N35**2*X14
      RES = RES + 10*M**2*N12*N35**2*X23 - 622*M**2*N12*N45 - 242*M**2*
     + N12*N45**2*X13 + 14*M**2*N12*N45**2*X14 + 10*M**2*N12*N45**2*X24
     +  + 56*M**2*N12**2*N13*N24*N35*X14**2*X23 - 56*M**2*N12**2*N13*
     + N24*X14*X23 + 56*M**2*N12**2*N13*N35*X14*X23 + 56*M**2*N12**2*
     + N14*N23*N45*X13**2*X24 - 56*M**2*N12**2*N14*N23*X13*X24 + 56*
     + M**2*N12**2*N14*N45*X13*X24 - 144*M**2*N12**2*N23*N35*N45*X13**2
     + *X14 + 144*M**2*N12**2*N23*N35*X13*X14 + 144*M**2*N12**2*N23*N45
     + *X13**2 - 144*M**2*N12**2*N23*X13 - 144*M**2*N12**2*N24*N35*N45*
     + X13*X14**2 + 144*M**2*N12**2*N24*N35*X14**2 + 144*M**2*N12**2*
     + N24*N45*X13*X14 - 144*M**2*N12**2*N24*X14 + 288*M**2*N12**2*N35*
     + N45*X13*X14 + 144*M**2*N12**2*N35*X14 - 288*M**2*N12**2*N35**2*
     + X14**2 + 144*M**2*N12**2*N45*X13 - 288*M**2*N12**2*N45**2*X13**2
     +  + 12*M**2*N13*N14*N23*N24*X12**2 + 32*M**2*N13*N14*N23*X12 + 20
     + *M**2*N13*N14*N23*X24 + 32*M**2*N13*N14*N24*X12 + 20*M**2*N13*
     + N14*N24*X23 + 12*M**2*N13*N14*N35*N45*X12**2 - 12*M**2*N13*N14*
     + N35*X12
      RES = RES + 20*M**2*N13*N14*N35*X23 - 12*M**2*N13*N14*N45*X12 + 
     + 20*M**2*N13*N14*N45*X24 + 80*M**2*N13*N14 + 32*M**2*N13*N23*N24*
     + X12 + 20*M**2*N13*N23*N24*X14 + 8*M**2*N13*N23*N45*X12 + 8*M**2*
     + N13*N23*N45*X14 + 8*M**2*N13*N23*N45*X24 - 4*M**2*N13*N23*N45**2
     + *X12*X14 - 4*M**2*N13*N23*N45**2*X12*X24 - 4*M**2*N13*N23*N45**2
     + *X12**2 + 32*M**2*N13*N23 - 264*M**2*N13*N24*N35*X12 - 162*M**2*
     + N13*N24*N35*X14 - 122*M**2*N13*N24*N35*X23 - 96*M**2*N13*N24*N45
     + *X12 - 32*M**2*N13*N24*N45*X14 + 220*M**2*N13*N24 - 64*M**2*N13*
     + N24**2*N35*X12*X14 - 32*M**2*N13*N24**2*N35*X12*X23 - 32*M**2*
     + N13*N24**2*N35*X12**2 - 64*M**2*N13*N24**2*N35*X14*X23 - 32*M**2
     + *N13*N24**2*N35*X14**2 + 32*M**2*N13*N24**2*X23 + 128*M**2*N13*
     + N35*N45*X12 + 180*M**2*N13*N35*N45*X14 - 368*M**2*N13*N35 - 236*
     + M**2*N13*N45 - 68*M**2*N13*N45**2*X12 - 4*M**2*N13*N45**2*X14 - 
     + 4*M**2*N13*N45**2*X24 - 32*M**2*N13**2*N24*X12 - 32*M**2*N13**2*
     + N24*X23 - 32*M**2*N13**2*N45*X24 - 64*M**2*N13**2 + 32*M**2*N14*
     + N23*N24*X12
      RES = RES + 20*M**2*N14*N23*N24*X13 - 96*M**2*N14*N23*N35*X12 - 
     + 32*M**2*N14*N23*N35*X13 - 264*M**2*N14*N23*N45*X12 - 162*M**2*
     + N14*N23*N45*X13 - 122*M**2*N14*N23*N45*X24 + 220*M**2*N14*N23 - 
     + 64*M**2*N14*N23**2*N45*X12*X13 - 32*M**2*N14*N23**2*N45*X12*X24
     +  - 32*M**2*N14*N23**2*N45*X12**2 - 64*M**2*N14*N23**2*N45*X13*
     + X24 - 32*M**2*N14*N23**2*N45*X13**2 + 32*M**2*N14*N23**2*X24 + 8
     + *M**2*N14*N24*N35*X12 + 8*M**2*N14*N24*N35*X13 + 8*M**2*N14*N24*
     + N35*X23 - 4*M**2*N14*N24*N35**2*X12*X13 - 4*M**2*N14*N24*N35**2*
     + X12*X23 - 4*M**2*N14*N24*N35**2*X12**2 + 32*M**2*N14*N24 + 128*
     + M**2*N14*N35*N45*X12 + 180*M**2*N14*N35*N45*X13 - 236*M**2*N14*
     + N35 - 68*M**2*N14*N35**2*X12 - 4*M**2*N14*N35**2*X13 - 4*M**2*
     + N14*N35**2*X23 - 368*M**2*N14*N45 - 32*M**2*N14**2*N23*X12 - 32*
     + M**2*N14**2*N23*X24 - 32*M**2*N14**2*N35*X23 - 64*M**2*N14**2 + 
     + 56*M**2*N23*N24*N35*N45*X12*X13 + 56*M**2*N23*N24*N35*N45*X12*
     + X14 + 36*M**2*N23*N24*N35*N45*X12**2 + 48*M**2*N23*N24*N35*N45*
     + X13*X14
      RES = RES + 20*M**2*N23*N24*N35*N45*X13**2 + 20*M**2*N23*N24*N35*
     + N45*X14**2 - 8*M**2*N23*N24*N35*X12 - 8*M**2*N23*N24*N35*X14 - 8
     + *M**2*N23*N24*N45*X12 - 8*M**2*N23*N24*N45*X13 + 48*M**2*N23*N24
     +  + 68*M**2*N23*N35*N45*X12 + 184*M**2*N23*N35*N45*X13 + 56*M**2*
     + N23*N35*N45*X14 - 180*M**2*N23*N35 - 290*M**2*N23*N45 + 56*M**2*
     + N23*N45**2*X12 + 170*M**2*N23*N45**2*X13 + 10*M**2*N23*N45**2*
     + X14 + 38*M**2*N23*N45**2*X24 - 128*M**2*N23**2*N45*X12 - 128*
     + M**2*N23**2*N45*X13 - 32*M**2*N23**2*N45*X14 - 96*M**2*N23**2*
     + N45*X24 + 64*M**2*N23**2*N45**2*X12*X13 + 32*M**2*N23**2*N45**2*
     + X12*X24 + 32*M**2*N23**2*N45**2*X12**2 + 64*M**2*N23**2*N45**2*
     + X13*X24 + 32*M**2*N23**2*N45**2*X13**2 + 32*M**2*N23**2 + 68*
     + M**2*N24*N35*N45*X12 + 56*M**2*N24*N35*N45*X13 + 184*M**2*N24*
     + N35*N45*X14 - 290*M**2*N24*N35 + 56*M**2*N24*N35**2*X12 + 10*
     + M**2*N24*N35**2*X13 + 170*M**2*N24*N35**2*X14 + 38*M**2*N24*
     + N35**2*X23 - 180*M**2*N24*N45 - 128*M**2*N24**2*N35*X12 - 32*
     + M**2*N24**2*N35*X13
      RES = RES - 128*M**2*N24**2*N35*X14 - 96*M**2*N24**2*N35*X23 + 64
     + *M**2*N24**2*N35**2*X12*X14 + 32*M**2*N24**2*N35**2*X12*X23 + 32
     + *M**2*N24**2*N35**2*X12**2 + 64*M**2*N24**2*N35**2*X14*X23 + 32*
     + M**2*N24**2*N35**2*X14**2 + 32*M**2*N24**2 + 680*M**2*N35*N45 - 
     + 180*M**2*N35**2 - 180*M**2*N45**2 - 80*M**4*MH**2*N13*N14*N23*
     + N24 - 48*M**4*MH**2*N13*N14*N23*N45 - 48*M**4*MH**2*N13*N14*N24*
     + N35 - 80*M**4*MH**2*N13*N14*N35*N45 - 48*M**4*MH**2*N13*N23*N24*
     + N45 - 16*M**4*MH**2*N13*N23*N45**2 + 640*M**4*MH**2*N13*N24*N35*
     + N45 + 384*M**4*MH**2*N13*N24**2*N35 + 384*M**4*MH**2*N13**2*N24*
     + N45 + 64*M**4*MH**2*N13**2*N24**2 + 64*M**4*MH**2*N13**2*N45**2
     +  - 48*M**4*MH**2*N14*N23*N24*N35 + 640*M**4*MH**2*N14*N23*N35*
     + N45 + 384*M**4*MH**2*N14*N23**2*N45 - 16*M**4*MH**2*N14*N24*
     + N35**2 + 384*M**4*MH**2*N14**2*N23*N35 + 64*M**4*MH**2*N14**2*
     + N23**2 + 64*M**4*MH**2*N14**2*N35**2 - 80*M**4*MH**2*N23*N24*N35
     + *N45 + 64*M**4*MH**2*N23**2*N45**2 + 64*M**4*MH**2*N24**2*N35**2
     +  - 144*M**4*N12*N13*N24*N35*X14
      RES = RES + 32*M**4*N12*N13*N24*N35*X23 + 288*M**4*N12*N13*N24*
     + N45*X14 + 432*M**4*N12*N13*N24 - 256*M**4*N12*N13*N24**2*N35*X14
     + *X23 + 256*M**4*N12*N13*N24**2*X23 - 288*M**4*N12*N13*N35*N45*
     + X14 + 144*M**4*N12*N13*N35 + 288*M**4*N12*N13*N45 + 288*M**4*N12
     + *N14*N23*N35*X13 - 144*M**4*N12*N14*N23*N45*X13 + 32*M**4*N12*
     + N14*N23*N45*X24 + 432*M**4*N12*N14*N23 - 256*M**4*N12*N14*N23**2
     + *N45*X13*X24 + 256*M**4*N12*N14*N23**2*X24 - 288*M**4*N12*N14*
     + N35*N45*X13 + 288*M**4*N12*N14*N35 + 144*M**4*N12*N14*N45 + 576*
     + M**4*N12*N23*N35*N45*X13 + 288*M**4*N12*N23*N35*N45*X14 - 288*
     + M**4*N12*N23*N35 - 368*M**4*N12*N23*N45 + 368*M**4*N12*N23*
     + N45**2*X13 + 288*M**4*N12*N24*N35*N45*X13 + 576*M**4*N12*N24*N35
     + *N45*X14 - 368*M**4*N12*N24*N35 + 368*M**4*N12*N24*N35**2*X14 - 
     + 288*M**4*N12*N24*N45 - 1152*M**4*N12*N35*N45 - 208*M**4*N12*
     + N35**2 - 208*M**4*N12*N45**2 + 64*M**4*N13*N14*N23*N24*X12 + 32*
     + M**4*N13*N14*N23*N45*X12 + 32*M**4*N13*N14*N23*N45*X24 + 64*M**4
     + *N13*N14*N23
      RES = RES + 32*M**4*N13*N14*N24*N35*X12 + 32*M**4*N13*N14*N24*N35
     + *X23 + 64*M**4*N13*N14*N24 - 64*M**4*N13*N14*N35*N45*X12 + 96*
     + M**4*N13*N14*N35 + 96*M**4*N13*N14*N45 + 32*M**4*N13*N23*N24*N45
     + *X12 + 32*M**4*N13*N23*N24*N45*X14 + 64*M**4*N13*N23*N24 + 64*
     + M**4*N13*N23*N45 - 624*M**4*N13*N24*N35 - 224*M**4*N13*N24*N45
     +  - 256*M**4*N13*N24**2*N35*X12 - 256*M**4*N13*N24**2*N35*X14 - 
     + 256*M**4*N13*N24**2*N35*X23 - 608*M**4*N13*N35*N45 - 256*M**4*
     + N13*N45**2 - 256*M**4*N13**2*N24 - 256*M**4*N13**2*N45 + 32*M**4
     + *N14*N23*N24*N35*X12 + 32*M**4*N14*N23*N24*N35*X13 + 64*M**4*N14
     + *N23*N24 - 224*M**4*N14*N23*N35 - 624*M**4*N14*N23*N45 - 256*
     + M**4*N14*N23**2*N45*X12 - 256*M**4*N14*N23**2*N45*X13 - 256*M**4
     + *N14*N23**2*N45*X24 + 64*M**4*N14*N24*N35 - 608*M**4*N14*N35*N45
     +  - 256*M**4*N14*N35**2 - 256*M**4*N14**2*N23 - 256*M**4*N14**2*
     + N35 + 64*M**4*N23*N24*N35*N45*X12 + 64*M**4*N23*N24*N35*N45*X13
     +  + 64*M**4*N23*N24*N35*N45*X14 + 32*M**4*N23*N24*N35 + 32*M**4*
     + N23*N24*N45
      RES = RES + 320*M**4*N23*N35*N45 + 112*M**4*N23*N45**2 - 256*M**4
     + *N23**2*N45 + 320*M**4*N24*N35*N45 + 112*M**4*N24*N35**2 - 256*
     + M**4*N24**2*N35 + 64*M**6*N13*N14*N23*N24 + 64*M**6*N13*N14*N23*
     + N45 + 64*M**6*N13*N14*N24*N35 + 64*M**6*N13*N14*N35*N45 + 64*
     + M**6*N13*N23*N24*N45 + 64*M**6*N13*N23*N45**2 - 512*M**6*N13*N24
     + *N35*N45 - 512*M**6*N13*N24**2*N35 - 512*M**6*N13**2*N24*N45 - 
     + 256*M**6*N13**2*N24**2 - 256*M**6*N13**2*N45**2 + 64*M**6*N14*
     + N23*N24*N35 - 512*M**6*N14*N23*N35*N45 - 512*M**6*N14*N23**2*N45
     +  + 64*M**6*N14*N24*N35**2 - 512*M**6*N14**2*N23*N35 - 256*M**6*
     + N14**2*N23**2 - 256*M**6*N14**2*N35**2 + 64*M**6*N23*N24*N35*N45
     +  - 256*M**6*N23**2*N45**2 - 256*M**6*N24**2*N35**2 - MH**2*N12*
     + N13*N24*N35*X14*X23 - 5*MH**2*N12*N13*N24*N35*X14**2 - 31*MH**2*
     + N12*N13*N24*X14 - 49*MH**2*N12*N13*N24*X23 + 31*MH**2*N12*N13*
     + N35*X14 - 23*MH**2*N12*N13*N35*X23 - 72*MH**2*N12*N13 - MH**2*
     + N12*N14*N23*N45*X13*X24 - 5*MH**2*N12*N14*N23*N45*X13**2 - 31*
     + MH**2*N12*N14*N23*X13
      RES = RES - 49*MH**2*N12*N14*N23*X24 + 31*MH**2*N12*N14*N45*X13
     +  - 23*MH**2*N12*N14*N45*X24 - 72*MH**2*N12*N14 - 18*MH**2*N12*
     + N23*N35*N45*X13*X14 - 40*MH**2*N12*N23*N35*N45*X13**2 + 4*MH**2*
     + N12*N23*N35*X13 + 18*MH**2*N12*N23*N35*X14 - 41*MH**2*N12*N23*
     + N45*X13 + 23*MH**2*N12*N23*N45**2*X13**2 - 54*MH**2*N12*N23 - 18
     + *MH**2*N12*N24*N35*N45*X13*X14 - 40*MH**2*N12*N24*N35*N45*X14**2
     +  - 41*MH**2*N12*N24*N35*X14 + 23*MH**2*N12*N24*N35**2*X14**2 + 
     + 18*MH**2*N12*N24*N45*X13 + 4*MH**2*N12*N24*N45*X14 - 54*MH**2*
     + N12*N24 - 166*MH**2*N12*N35*N45*X13 - 166*MH**2*N12*N35*N45*X14
     +  + 162*MH**2*N12*N35 + 95*MH**2*N12*N35**2*X14 + 162*MH**2*N12*
     + N45 + 95*MH**2*N12*N45**2*X13 - 14*MH**2*N12**2*N13*N24*N35*
     + X14**2*X23 + 14*MH**2*N12**2*N13*N24*X14*X23 - 14*MH**2*N12**2*
     + N13*N35*X14*X23 - 14*MH**2*N12**2*N14*N23*N45*X13**2*X24 + 14*
     + MH**2*N12**2*N14*N23*X13*X24 - 14*MH**2*N12**2*N14*N45*X13*X24
     +  + 36*MH**2*N12**2*N23*N35*N45*X13**2*X14 - 36*MH**2*N12**2*N23*
     + N35*X13*X14
      RES = RES - 36*MH**2*N12**2*N23*N45*X13**2 + 36*MH**2*N12**2*N23*
     + X13 + 36*MH**2*N12**2*N24*N35*N45*X13*X14**2 - 36*MH**2*N12**2*
     + N24*N35*X14**2 - 36*MH**2*N12**2*N24*N45*X13*X14 + 36*MH**2*
     + N12**2*N24*X14 - 72*MH**2*N12**2*N35*N45*X13*X14 - 36*MH**2*
     + N12**2*N35*X14 + 72*MH**2*N12**2*N35**2*X14**2 - 36*MH**2*N12**2
     + *N45*X13 + 72*MH**2*N12**2*N45**2*X13**2 - 6*MH**2*N13*N14*N23*
     + N24*X12**2 + 2*MH**2*N13*N14*N23*N45*X12*X24 + 2*MH**2*N13*N14*
     + N23*N45*X12**2 - 14*MH**2*N13*N14*N23*X12 - 8*MH**2*N13*N14*N23*
     + X24 + 2*MH**2*N13*N14*N24*N35*X12*X23 + 2*MH**2*N13*N14*N24*N35*
     + X12**2 - 14*MH**2*N13*N14*N24*X12 - 8*MH**2*N13*N14*N24*X23 - 6*
     + MH**2*N13*N14*N35*N45*X12**2 + 8*MH**2*N13*N14*N35*X12 - 4*MH**2
     + *N13*N14*N35*X23 + 8*MH**2*N13*N14*N45*X12 - 4*MH**2*N13*N14*N45
     + *X24 - 24*MH**2*N13*N14 + 2*MH**2*N13*N23*N24*N45*X12*X14 + 2*
     + MH**2*N13*N23*N24*N45*X12**2 - 14*MH**2*N13*N23*N24*X12 - 8*
     + MH**2*N13*N23*N24*X14 + 8*MH**2*N13*N23*N45*X12 - 2*MH**2*N13*
     + N23*N45**2*X12**2
      RES = RES - 18*MH**2*N13*N23 + 47*MH**2*N13*N24*N35*X12 + 24*
     + MH**2*N13*N24*N35*X14 + 31*MH**2*N13*N24*N35*X23 + 18*MH**2*N13*
     + N24*N45*X12 + 18*MH**2*N13*N24*N45*X14 - 77*MH**2*N13*N24 - 60*
     + MH**2*N13*N35*N45*X12 - 54*MH**2*N13*N35*N45*X14 + 105*MH**2*N13
     + *N35 + 60*MH**2*N13*N45 + 14*MH**2*N13*N45**2*X12 + 2*MH**2*N14*
     + N23*N24*N35*X12*X13 + 2*MH**2*N14*N23*N24*N35*X12**2 - 14*MH**2*
     + N14*N23*N24*X12 - 8*MH**2*N14*N23*N24*X13 + 18*MH**2*N14*N23*N35
     + *X12 + 18*MH**2*N14*N23*N35*X13 + 47*MH**2*N14*N23*N45*X12 + 24*
     + MH**2*N14*N23*N45*X13 + 31*MH**2*N14*N23*N45*X24 - 77*MH**2*N14*
     + N23 + 8*MH**2*N14*N24*N35*X12 - 2*MH**2*N14*N24*N35**2*X12**2 - 
     + 18*MH**2*N14*N24 - 60*MH**2*N14*N35*N45*X12 - 54*MH**2*N14*N35*
     + N45*X13 + 60*MH**2*N14*N35 + 14*MH**2*N14*N35**2*X12 + 105*MH**2
     + *N14*N45 - 22*MH**2*N23*N24*N35*N45*X12*X13 - 22*MH**2*N23*N24*
     + N35*N45*X12*X14 - 14*MH**2*N23*N24*N35*N45*X12**2 - 20*MH**2*N23
     + *N24*N35*N45*X13*X14 - 8*MH**2*N23*N24*N35*N45*X13**2 - 8*MH**2*
     + N23*N24*N35*N45*X14**2
      RES = RES + 10*MH**2*N23*N24*N35*X12 + 4*MH**2*N23*N24*N35*X13 + 
     + 8*MH**2*N23*N24*N35*X14 + 10*MH**2*N23*N24*N45*X12 + 8*MH**2*N23
     + *N24*N45*X13 + 4*MH**2*N23*N24*N45*X14 - 20*MH**2*N23*N24 - 14*
     + MH**2*N23*N35*N45*X12 - 54*MH**2*N23*N35*N45*X13 - 8*MH**2*N23*
     + N35*N45*X14 + 42*MH**2*N23*N35 + 35*MH**2*N23*N45 + 3*MH**2*N23*
     + N45**2*X12 + 12*MH**2*N23*N45**2*X13 - 14*MH**2*N24*N35*N45*X12
     +  - 8*MH**2*N24*N35*N45*X13 - 54*MH**2*N24*N35*N45*X14 + 35*MH**2
     + *N24*N35 + 3*MH**2*N24*N35**2*X12 + 12*MH**2*N24*N35**2*X14 + 42
     + *MH**2*N24*N45 - 232*MH**2*N35*N45 + 57*MH**2*N35**2 + 57*MH**2*
     + N45**2 - 18*MH**4*N12*N13*N24*N35*X14 + 54*MH**4*N12*N13*N24 + 
     + 18*MH**4*N12*N13*N35 - 18*MH**4*N12*N14*N23*N45*X13 + 54*MH**4*
     + N12*N14*N23 + 18*MH**4*N12*N14*N45 + 72*MH**4*N12*N23*N35*N45*
     + X13 - 36*MH**4*N12*N23*N35 + 72*MH**4*N12*N24*N35*N45*X14 - 36*
     + MH**4*N12*N24*N45 - 144*MH**4*N12*N35*N45 + 8*MH**4*N13*N14*N23*
     + N24*X12 - 2*MH**4*N13*N14*N23*N45*X12 + 10*MH**4*N13*N14*N23 - 2
     + *MH**4*N13*N14*N24*N35*X12
      RES = RES + 10*MH**4*N13*N14*N24 - 8*MH**4*N13*N14*N35*N45*X12 + 
     + 6*MH**4*N13*N14*N35 + 6*MH**4*N13*N14*N45 - 2*MH**4*N13*N23*N24*
     + N45*X12 + 10*MH**4*N13*N23*N24 - 16*MH**4*N13*N24*N35*N45*X12 - 
     + 16*MH**4*N13*N24*N35*N45*X14 - 52*MH**4*N13*N24*N35 - 18*MH**4*
     + N13*N24*N45 - 88*MH**4*N13*N35*N45 - 2*MH**4*N14*N23*N24*N35*X12
     +  + 10*MH**4*N14*N23*N24 - 16*MH**4*N14*N23*N35*N45*X12 - 16*
     + MH**4*N14*N23*N35*N45*X13 - 18*MH**4*N14*N23*N35 - 52*MH**4*N14*
     + N23*N45 - 88*MH**4*N14*N35*N45 + 12*MH**4*N23*N24*N35*N45*X12 + 
     + 10*MH**4*N23*N24*N35*N45*X13 + 10*MH**4*N23*N24*N35*N45*X14 - 4*
     + MH**4*N23*N24*N35 - 4*MH**4*N23*N24*N45 + 10*MH**4*N23*N35*N45
     +  + 10*MH**4*N24*N35*N45 - 4*MH**6*N13*N14*N23*N24 - 4*MH**6*N13*
     + N14*N35*N45 + 32*MH**6*N13*N24*N35*N45 + 32*MH**6*N14*N23*N35*
     + N45 - 4*MH**6*N23*N24*N35*N45 - 2*N12*N13*N24*N35*X14*X23**2 + 
     + 28*N12*N13*N24*N35*X14**2*X23 + 7*N12*N13*N24*N35*X14**3 + 15*
     + N12*N13*N24*X14*X23 + 11*N12*N13*N24*X14**2 + 27*N12*N13*N24*
     + X23**2
      RES = RES - 15*N12*N13*N35*X14*X23 + 25*N12*N13*N35*X14**2 + 9*
     + N12*N13*N35*X23**2 + 18*N12*N13*X14 + 72*N12*N13*X23 + 36*N12*
     + N13*X24 - 2*N12*N14*N23*N45*X13*X24**2 + 28*N12*N14*N23*N45*
     + X13**2*X24 + 7*N12*N14*N23*N45*X13**3 + 15*N12*N14*N23*X13*X24
     +  + 11*N12*N14*N23*X13**2 + 27*N12*N14*N23*X24**2 - 15*N12*N14*
     + N45*X13*X24 + 25*N12*N14*N45*X13**2 + 9*N12*N14*N45*X24**2 + 18*
     + N12*N14*X13 + 36*N12*N14*X23 + 72*N12*N14*X24 - 16*N12*N23*N35*
     + N45*X13**2*X14 + 2*N12*N23*N35*N45*X13**3 + 34*N12*N23*N35*X13*
     + X14 + 16*N12*N23*N35*X13**2 + 9*N12*N23*N45*X13*X14 + 45*N12*N23
     + *N45*X13*X24 + 98*N12*N23*N45*X13**2 + 9*N12*N23*N45**2*X13**2*
     + X14 - 35*N12*N23*N45**2*X13**2*X24 - 23*N12*N23*N45**2*X13**3 - 
     + 21*N12*N23*X13 + 18*N12*N23*X14 + 33*N12*N23*X24 - 16*N12*N24*
     + N35*N45*X13*X14**2 + 2*N12*N24*N35*N45*X14**3 + 9*N12*N24*N35*
     + X13*X14 + 45*N12*N24*N35*X14*X23 + 98*N12*N24*N35*X14**2 + 9*N12
     + *N24*N35**2*X13*X14**2 - 35*N12*N24*N35**2*X14**2*X23 - 23*N12*
     + N24*N35**2*X14**3
      RES = RES + 34*N12*N24*N45*X13*X14 + 16*N12*N24*N45*X14**2 + 18*
     + N12*N24*X13 - 21*N12*N24*X14 + 33*N12*N24*X23 - 140*N12*N35*N45*
     + X13*X14 - 52*N12*N35*N45*X13**2 - 52*N12*N35*N45*X14**2 + 36*N12
     + *N35*X13 + 129*N12*N35*X14 - 33*N12*N35*X23 + 9*N12*N35**2*X13*
     + X14 - 12*N12*N35**2*X14*X23 - 23*N12*N35**2*X14**2 + 129*N12*N45
     + *X13 + 36*N12*N45*X14 - 33*N12*N45*X24 + 9*N12*N45**2*X13*X14 - 
     + 12*N12*N45**2*X13*X24 - 23*N12*N45**2*X13**2 + 7*N12**2*N13*N24*
     + N35*X14**2*X23**2 + 7*N12**2*N13*N24*N35*X14**3*X23 - 7*N12**2*
     + N13*N24*X14*X23**2 - 7*N12**2*N13*N24*X14**2*X23 + 7*N12**2*N13*
     + N35*X14*X23**2 + 7*N12**2*N13*N35*X14**2*X23 + 7*N12**2*N14*N23*
     + N45*X13**2*X24**2 + 7*N12**2*N14*N23*N45*X13**3*X24 - 7*N12**2*
     + N14*N23*X13*X24**2 - 7*N12**2*N14*N23*X13**2*X24 + 7*N12**2*N14*
     + N45*X13*X24**2 + 7*N12**2*N14*N45*X13**2*X24 - 18*N12**2*N23*N35
     + *N45*X13**2*X14**2 - 18*N12**2*N23*N35*N45*X13**3*X14 + 18*
     + N12**2*N23*N35*X13*X14**2 + 18*N12**2*N23*N35*X13**2*X14 + 18*
     + N12**2*N23*N45*X13**2*X14
      RES = RES + 53*N12**2*N23*N45*X13**2*X24 + 18*N12**2*N23*N45*
     + X13**3 - 23*N12**2*N23*N45**2*X13**3*X24 - 18*N12**2*N23*X13*X14
     +  - 30*N12**2*N23*X13*X24 - 18*N12**2*N23*X13**2 - 18*N12**2*N24*
     + N35*N45*X13*X14**3 - 18*N12**2*N24*N35*N45*X13**2*X14**2 + 18*
     + N12**2*N24*N35*X13*X14**2 + 53*N12**2*N24*N35*X14**2*X23 + 18*
     + N12**2*N24*N35*X14**3 - 23*N12**2*N24*N35**2*X14**3*X23 + 18*
     + N12**2*N24*N45*X13*X14**2 + 18*N12**2*N24*N45*X13**2*X14 - 18*
     + N12**2*N24*X13*X14 - 30*N12**2*N24*X14*X23 - 18*N12**2*N24*
     + X14**2 - 36*N12**2*N35*N45*X13*X14**2 - 36*N12**2*N35*N45*X13**2
     + *X14 + 18*N12**2*N35*X13*X14 + 30*N12**2*N35*X14*X23 + 18*N12**2
     + *N35*X14**2 - 23*N12**2*N35**2*X14**2*X23 + 18*N12**2*N45*X13*
     + X14 + 30*N12**2*N45*X13*X24 + 18*N12**2*N45*X13**2 - 23*N12**2*
     + N45**2*X13**2*X24 + 2*N13*N14*N23*N24*X12**3 + 6*N13*N14*N23*X12
     + *X24 + 6*N13*N14*N23*X12**2 + 2*N13*N14*N23*X24**2 + 6*N13*N14*
     + N24*X12*X23 + 6*N13*N14*N24*X12**2 + 2*N13*N14*N24*X23**2 - 2*
     + N13*N14*N35*N45*X12**3
      RES = RES - 2*N13*N14*N35*X12*X23 + 2*N13*N14*N35*X12**2 + 2*N13*
     + N14*N35*X23**2 - 2*N13*N14*N45*X12*X24 + 2*N13*N14*N45*X12**2 + 
     + 2*N13*N14*N45*X24**2 + 12*N13*N14*X12 + 12*N13*N14*X23 + 12*N13*
     + N14*X24 + 6*N13*N23*N24*X12*X14 + 6*N13*N23*N24*X12**2 + 2*N13*
     + N23*N24*X14**2 - 4*N13*N23*N45*X12*X14 - 4*N13*N23*N45*X12*X24
     +  - 4*N13*N23*N45*X12**2 + 2*N13*N23*N45**2*X12**2*X14 + 2*N13*
     + N23*N45**2*X12**2*X24 + 2*N13*N23*N45**2*X12**3 + 14*N13*N23*X12
     +  + 8*N13*N23*X14 + 8*N13*N23*X24 + 5*N13*N24*N35*X12*X14 - 18*
     + N13*N24*N35*X12*X23 - 9*N13*N24*N35*X12**2 + 3*N13*N24*N35*X14*
     + X23 + 21*N13*N24*N35*X14**2 - 9*N13*N24*N35*X23**2 + 39*N13*N24*
     + X12 + 28*N13*N24*X14 + 60*N13*N24*X23 - 38*N13*N35*N45*X12*X14
     +  - 22*N13*N35*N45*X12**2 - 18*N13*N35*N45*X14**2 + 13*N13*N35*
     + X12 + 52*N13*N35*X14 - 40*N13*N35*X23 + 18*N13*N45*X12 + 16*N13*
     + N45*X14 - 20*N13*N45*X24 + 2*N13*N45**2*X12*X14 + 2*N13*N45**2*
     + X12*X24 + 2*N13*N45**2*X12**2 + 28*N13 + 6*N14*N23*N24*X12*X13
     +  + 6*N14*N23*N24*X12**2
      RES = RES + 2*N14*N23*N24*X13**2 + 5*N14*N23*N45*X12*X13 - 18*N14
     + *N23*N45*X12*X24 - 9*N14*N23*N45*X12**2 + 3*N14*N23*N45*X13*X24
     +  + 21*N14*N23*N45*X13**2 - 9*N14*N23*N45*X24**2 + 39*N14*N23*X12
     +  + 28*N14*N23*X13 + 60*N14*N23*X24 - 4*N14*N24*N35*X12*X13 - 4*
     + N14*N24*N35*X12*X23 - 4*N14*N24*N35*X12**2 + 2*N14*N24*N35**2*
     + X12**2*X13 + 2*N14*N24*N35**2*X12**2*X23 + 2*N14*N24*N35**2*
     + X12**3 + 14*N14*N24*X12 + 8*N14*N24*X13 + 8*N14*N24*X23 - 38*N14
     + *N35*N45*X12*X13 - 22*N14*N35*N45*X12**2 - 18*N14*N35*N45*X13**2
     +  + 18*N14*N35*X12 + 16*N14*N35*X13 - 20*N14*N35*X23 + 2*N14*
     + N35**2*X12*X13 + 2*N14*N35**2*X12*X23 + 2*N14*N35**2*X12**2 + 13
     + *N14*N45*X12 + 52*N14*N45*X13 - 40*N14*N45*X24 + 28*N14 + 24*N23
     + *N24*N35*N45*X12*X13*X14 + 10*N23*N24*N35*N45*X12*X13**2 + 10*
     + N23*N24*N35*N45*X12*X14**2 + 14*N23*N24*N35*N45*X12**2*X13 + 14*
     + N23*N24*N35*N45*X12**2*X14 + 6*N23*N24*N35*N45*X12**3 + 10*N23*
     + N24*N35*N45*X13*X14**2 + 10*N23*N24*N35*N45*X13**2*X14 + 2*N23*
     + N24*N35*N45*X13**3
      RES = RES + 2*N23*N24*N35*N45*X14**3 - 4*N23*N24*N35*X12*X13 - 8*
     + N23*N24*N35*X12*X14 - 4*N23*N24*N35*X12**2 - 4*N23*N24*N35*X13*
     + X14 - 4*N23*N24*N35*X14**2 - 8*N23*N24*N45*X12*X13 - 4*N23*N24*
     + N45*X12*X14 - 4*N23*N24*N45*X12**2 - 4*N23*N24*N45*X13*X14 - 4*
     + N23*N24*N45*X13**2 + 16*N23*N24*X12 + 10*N23*N24*X13 + 10*N23*
     + N24*X14 + 14*N23*N35*N45*X12*X13 + 8*N23*N35*N45*X12*X14 + 6*N23
     + *N35*N45*X12**2 + 10*N23*N35*N45*X13*X14 + 10*N23*N35*N45*X13**2
     +  + 2*N23*N35*N45*X14**2 - 4*N23*N35*X12 + 12*N23*N35*X13 - 4*N23
     + *N35*X14 + 6*N23*N45*X12 + 74*N23*N45*X13 - 13*N23*N45*X14 + 4*
     + N23*N45*X24 - 15*N23*N45**2*X12*X13 + 13*N23*N45**2*X12*X14 - 
     + N23*N45**2*X12*X24 - N23*N45**2*X12**2 + 20*N23*N45**2*X13*X14
     +  - 15*N23*N45**2*X13*X24 - 35*N23*N45**2*X13**2 + 43*N23 + 8*N24
     + *N35*N45*X12*X13 + 14*N24*N35*N45*X12*X14 + 6*N24*N35*N45*X12**2
     +  + 10*N24*N35*N45*X13*X14 + 2*N24*N35*N45*X13**2 + 10*N24*N35*
     + N45*X14**2 + 6*N24*N35*X12 - 13*N24*N35*X13 + 74*N24*N35*X14 + 4
     + *N24*N35*X23
      RES = RES + 13*N24*N35**2*X12*X13 - 15*N24*N35**2*X12*X14 - N24*
     + N35**2*X12*X23 - N24*N35**2*X12**2 + 20*N24*N35**2*X13*X14 - 15*
     + N24*N35**2*X14*X23 - 35*N24*N35**2*X14**2 - 4*N24*N45*X12 - 4*
     + N24*N45*X13 + 12*N24*N45*X14 + 43*N24 - 108*N35*N45*X12 - 138*
     + N35*N45*X13 - 138*N35*N45*X14 + 95*N35 - 3*N35**2*X12 + 11*
     + N35**2*X13 - 12*N35**2*X14 - 3*N35**2*X23 + 95*N45 - 3*N45**2*
     + X12 - 12*N45**2*X13 + 11*N45**2*X14 - 3*N45**2*X24

      DHGG = RES
      RETURN
      END

