#========================================================
# Instruction for using the JHUGenMELA/ggZZ_MCFM
# NOTE the instructions need lxplus at cern
# contact Yanyan Gao (Yanyan.Gao@cern.SPAMNOT.ch) or Ulascan Sarica (ulascan.sarica@cern.SPAMNOT.ch)
#========================================================

1. Make the MCFM library libmcfm_7p0.so (a copy that works for a good range of software releases in slc6 and slc5 is provided) outside of the JHUGenMELA/ggZZ_MCFM

   1) Download MCFM 
   
   cd ../
   wget http://mcfm.fnal.gov/MCFM-7.0.tar.gz
   tar -xf MCFM-7.0.tar.gz
   cd MCFM-7.0/

   2) Modify makefile: replace the gfortran code tags to output library

   USEOMP = NO
   FFLAGS 	= -fno-automatic -fno-f2c $(OMPFLAG) -O0 -fPIC -g -I$(INCPATH) -I$(TENSORREDDIR)/Include -I$(OBJNAME)
   F90FLAGS = -fno-automatic -fno-f2c $(OMPFLAG) -O2 -fPIC -g -I$(INCPATH) -I$(OBJNAME) -J$(OBJNAME)

   3) Modify the makefiles in QCDLoop/ql/, QCDLoop/ff/, TensorStructure/ov/, TensorStructure/pv/, TensorStructure/recur/*/, adding the -fPIC in FFLAGS

      Ex. FFLAGS  = -g -fPIC

   4) Copy contents of JHUGenMELA/ZZ_MCFM/src/ into MCFM-7.0/src/.

   5) Add following lines in MCFM-7.0/makefile:
      Under "ZZFILES = \":
                           gg_ZZ_int_freenorm.o \
                           qqb_zz_stu.o \

   6) Compile the package and export the library
   
    ./Install
    make
    cd obj/
    g++ -Wl,-soname,libmcfm_7p0.so -shared -o libmcfm_7p0.so *.o ../QCDLoop/ql/obj/ql*.o ../QCDLoop/ql/obj/a*.o ../QCDLoop/ff/obj/*.o ../TensorReduction/ov/*.a ../TensorReduction/pv/*.a ../TensorReduction/recur/*.a  

    Note here that the order "../TensorReduction/ov/*.a ../TensorReduction/pv/*.a" matters.

   7) Copy library libmcfm_7p0.so to the JHUGenMELA/ggZZ_MCFM/ area
          ---> Sample file compiled for SLC5/6 gcc 4.6.2+ is provided. Earlier gcc 4.3.4 needs to be compiled from scratch as described above.


2. go back to JHUGenMELA/ggZZ_MCFM/ and compile the MELA code

make clean   # absolutely needed
make

3. run test script based on one event

root -l -b -q loadMELA.C testME.C+

* The output is in "output.txt", which should be identical to the reference "output_ref.txt" provided.
