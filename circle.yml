machine:
  #https://circleci.com/docs/environment, at the bottom
  pre:
    - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.6 10
    - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.6 10
    - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.9 20
    - sudo apt-get install dos2unix
    - sudo apt-get install cadaver
  environment:
    #environment variables can only be set in this section so . bin/thisroot.sh doesn't work
    PATH: "$(echo $HOME/root/bin:$HOME/CMSJHU_AnalysisMacros/JHUSpinWidthPaper_2015/LHEAnalyzer:$PATH | sed s/:$//)"
    LD_LIBRARY_PATH: "$(echo $HOME/root/lib:$HOME/LHAPDF-6.1.6/lib:$LD_LIBRARY_PATH | sed s/:$//)"
    SHLIB_PATH: "$(echo $HOME/root/lib:$SHLIB_PATH | sed s/:$//)"
    LIBPATH: "$(echo $HOME/root/lib:$LIBPATH | sed s/:$//)"
    PYTHONPATH: "$(echo $HOME/root/lib:$PYTHONPATH | sed s/:$//)"
    MANPATH: "$(echo $HOME/JHUGen/JHUGenerator/root/man:$MANPATH | sed s/:$//)"
    LHAPDF_DATA_PATH: "/home/ubuntu/LHAPDF-6.1.6/share/LHAPDF"

general:
  build_dir: JHUGenerator

dependencies:
  override:
    - |
      if ! [ -d ~/root ]; then
        cd &&
        wget https://root.cern.ch/download/root_v6.04.08.Linux-ubuntu14-x86_64-gcc4.8.tar.gz &&
        tar -xvzf root_v6.04.08.Linux-ubuntu14-x86_64-gcc4.8.tar.gz
      fi
    - |
      cd ~ &&
      if ! [ -d CMSJHU_AnalysisMacros ]; then
        git clone -b noMELA git@github.com:hroskes/CMSJHU_AnalysisMacros;
      fi &&
      cd CMSJHU_AnalysisMacros/JHUSpinWidthPaper_2015/LHEAnalyzer &&
      git pull &&
      make all
    - |
      if ! [ -d ~/checklhe ]; then
        cd ~ &&
        git clone -b lite git@github.com:hroskes/checklhe
      else
        cd ~/checklhe &&
        git pull
      fi
    - |
      if ! [ -d ~/LHAPDF-6.1.6 ]; then
        cd $(mktemp -d) &&
        wget http://www.hepforge.org/archive/lhapdf/LHAPDF-6.1.6.tar.gz &&
        tar xvzf LHAPDF-6.1.6.tar.gz &&
        cd LHAPDF-6.1.6 &&
        ./configure --prefix=$HOME/LHAPDF-6.1.6 &&
        make &&
        make install
      fi &&
      cd ~/LHAPDF-6.1.6/bin &&
      ./lhapdf install NNPDF30_lo_as_0130
    #make sure no big files are accidentally committed (>50 MB)
    #can change this if we need a bigger file in the repository, but at least get a warning
    #http://stackoverflow.com/questions/10622179/how-to-find-identify-large-files-commits-in-git-history#comment46022100_20460121
    #file sizes are written in bytes, 50 MB = 50*1024^2 bytes
    - |
      cd .. &&
      git gc &&
      join -e ERROR -a 2 -j 1 -o 2.1,2.3,1.2 --check-order <( git rev-list --objects --all | sort -k 1 ) <( git verify-pack -v .git/objects/pack/pack-*.idx | gawk '( NF == 5 && $2 == "blob" ){print}' | sort -k1 ) | sort -k2gr > $CIRCLE_ARTIFACTS/filesizes.txt &&
      if ! [ $(head -1 $CIRCLE_ARTIFACTS/filesizes.txt | sed -r 's/.* (.*) .*/\1/') -lt 52428800 ]; then
         cd ~ &&
         rm -rf JHUGen &&
         git clone "git@github.com:$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME" &&
         cd JHUGen &&
         if [ "$CIRCLE_BRANCH" ]; then
           git checkout "$CIRCLE_BRANCH"
         elif [ "$CIRCLE_TAG" ]; then
           git checkout "$CIRCLE_TAG"
         else
           git checkout "$CIRCLE_SHA1"
         fi &&
         join -e ERROR -a 2 -j 1 -o 2.1,2.3,1.2 --check-order <( git rev-list --objects --all | sort -k 1 ) <( git verify-pack -v .git/objects/pack/pack-*.idx | gawk '( NF == 5 && $2 == "blob" ){print}' | sort -k1 ) | sort -k2gr > $CIRCLE_ARTIFACTS/filesizes.txt
      fi
    - cd pdfs && ./downloadNNPDF.sh
    - cd pdfs && ./downloadNNPDF.sh:
        pwd:
          ../JHUGenMELA
  cache_directories:
    - ~/root
    - ~/CMSJHU_AnalysisMacros
    - ~/checklhe
    - ~/LHAPDF-6.1.6

test:

  pre:
    - |
      if ! [ $(head -1 $CIRCLE_ARTIFACTS/filesizes.txt | sed -r 's/.* (.*) .*/\1/') -lt 52428800 ]; then
        echo 'There is a big file committed to the repository.  Check filesizes.txt in the artifacts.'; exit 1
      fi
    - mkdir -p $CIRCLE_ARTIFACTS/{ggH,VBF,HJJ,other}/{SM,PS,fa30.5,fa30.5i,a2}
    #make sure the default compiler is set to gfortran
    - "! grep 'Comp *= *ifort' makefile"
    #but continue the other tests even if it is
    - sed -i -r -e "s/(Comp *= *)ifort/\1gfort/" makefile
    #same with lhapdf
    - "! grep 'UseLHAPDF *= *Yes' makefile"
    - sed -i -r -e "s/(UseLHAPDF *= *)Yes/\1No/" makefile
    #and same with MELA
    - "! grep 'linkMELA *= *Yes' makefile"
    - sed -i -r -e "s/(linkMELA *= *)Yes/\1No/" makefile
    - make
    - make:
         pwd:
           ../JHUGenMELA
    #check sync between generator and MELA
    - sdiff -s mod_Graviton.F90 ../JHUGenMELAv2/MELA/fortran/mod_Graviton.F90
    - sdiff -s mod_Higgs.F90 ../JHUGenMELAv2/MELA/fortran/mod_Higgs.F90
    - sdiff -s mod_HiggsJ.F90 ../JHUGenMELAv2/MELA/fortran/mod_HiggsJ.F90
    - sdiff -s mod_HiggsJJ.F90 ../JHUGenMELAv2/MELA/fortran/mod_HiggsJJ.F90
    - sdiff -s mod_Misc.F90 ../JHUGenMELAv2/MELA/fortran/mod_Misc.F90
    - sdiff -s mod_Parameters.F90 ../JHUGenMELAv2/MELA/fortran/mod_Parameters.F90
    - sdiff -s mod_THiggs.F90 ../JHUGenMELAv2/MELA/fortran/mod_THiggs.F90
    - sdiff -s mod_TTBHiggs.F90 ../JHUGenMELAv2/MELA/fortran/mod_TTBHiggs.F90
    - sdiff -s mod_TopDecay.F90 ../JHUGenMELAv2/MELA/fortran/mod_TopDecay.F90
    - sdiff -s mod_VHiggs.F90 ../JHUGenMELAv2/MELA/fortran/mod_VHiggs.F90
    - sdiff -s mod_Zprime.F90 ../JHUGenMELAv2/MELA/fortran/mod_Zprime.F90
    #check sync between manual, README, and ./JHUGen help
    - |
      commandlineconfigstartline=$(grep -n "[{]Command line configuration[}]" ../Manual/manJHUGenerator.tex | head -1 | sed "s/:.*//") &&
      startline=$(expr $(tail -n +$commandlineconfigstartline ../Manual/manJHUGenerator.tex | grep -n "begin[{]verbatim[}]" | head -1 | sed "s/:.*//") + $commandlineconfigstartline) &&
      endline=$(expr $(tail -n +$commandlineconfigstartline ../Manual/manJHUGenerator.tex | grep -n "end[{]verbatim[}]" | head -1 | sed "s/:.*//") + $commandlineconfigstartline - 2) &&
      sdiff -sb <(grep "^  " README) <(sed -n "${startline},${endline}p" ../Manual/manJHUGenerator.tex | sed "s/See below/See manual/")
    - sdiff -sb <(grep "^  " README) <(./JHUGen help 2> /dev/null | grep "[^ ]")
    #check that all command line options are documented
    - |
      exitstatus=0
      for a in $(grep -i 'call *ReadCommandLineArgument' main.F90 | sed -r 's/.*"(.*)".*/\1/'); do
        if ! grep -q $a ../Manual/manJHUGenerator.tex &&
           ! grep -q ${a/w/z} ../Manual/manJHUGenerator.tex &&        #ghw*, etc. are mentioned collectively
           ! [ $a == WriteGit ] && ! [ $a == HbbDK ] &&               #for internal testing
           ! [ $a == VBF_m4l_min ] && ! [ $a == VBF_m4l_max ] &&      #for internal testing
           ! [ $a == PrintPMZZ ] && ! [ $a == PrintPMZZIntervals ] && #for internal testing
           ! [ $a == GenEvents ]                                      #not sure what this does
        then
          echo "$a is undocumented!"
          exitstatus=1
        fi
      done
      exit $exitstatus



  override:
    #here we want to generate as many production modes as possible and get the widest range of events to check for syntax issues
    #the actual checking (checklhe) is done in post
    #later is more specific generation with different hypotheses to get plots (which of course have to be checked manually)

    #gg/qqbar -> spin0/1/2
    - ./JHUGen PDFSet=3 Process=0  VegasNc0=100000 VegasNc2=100 DataFile=$CIRCLE_ARTIFACTS/other/spin0_Zgamma     DecayMode1=9  DecayMode2=7 ghzgs2=1,0
    - ./JHUGen PDFSet=3 Process=0  VegasNc0=100000 VegasNc2=100 DataFile=$CIRCLE_ARTIFACTS/other/spin0_gammagamma DecayMode1=7  DecayMode2=7 ghgsgs2=1,0
    - ./JHUGen PDFSet=3 Process=1  VegasNc0=100000 VegasNc2=100 DataFile=$CIRCLE_ARTIFACTS/other/spin1_WW         DecayMode1=11 DecayMode2=11 zprime_zz_1=1,0
    - ./JHUGen PDFSet=3 Process=2  VegasNc0=100000 VegasNc2=100 DataFile=$CIRCLE_ARTIFACTS/other/spin2_ZZ         DecayMode1=9  DecayMode2=9 a1=1,0 b1=1,0 b5=1,0
    - ./JHUGen PDFSet=3 Process=2  VegasNc0=100000 VegasNc2=100 DataFile=$CIRCLE_ARTIFACTS/other/spin2_Zgamma     DecayMode1=9  DecayMode2=7 a1=1,0 b1=1,0
    - ./JHUGen PDFSet=3 Process=2  VegasNc0=100000 VegasNc2=100 DataFile=$CIRCLE_ARTIFACTS/other/spin2_gammagamma DecayMode1=7  DecayMode2=7 a1=1,0 b1=1,0
    #WH, ZH, gammaH
    - ./JHUGen PDFSet=3 Process=50 VegasNc0=100000 VegasNc2=10000 DataFile=$CIRCLE_ARTIFACTS/other/WH DecayMode1=11
    - ./JHUGen PDFSet=3 Process=50 VegasNc0=100000 VegasNc2=10000 DataFile=$CIRCLE_ARTIFACTS/other/ZH DecayMode1=9 HbbDK
    - ./JHUGen PDFSet=3 Process=50 VegasNc0=100000 VegasNc2=10000 DataFile=$CIRCLE_ARTIFACTS/other/gammaH DecayMode1=7 ghz1=0,0 ghzgs2=1,0
    - ./JHUGen PDFSet=3 Process=50 VegasNc0=100000 VegasNc2=10000 DataFile=$CIRCLE_ARTIFACTS/other/gammaH_bb DecayMode1=7 ghz1=0,0 ghgsgs2=1,0 HbbDK
    #- ./JHUGen PDFSet=3 VegasNc0=100000 ConvertLHE=$CIRCLE_ARTIFACTS/other/ZH.lhe DataFile=$CIRCLE_ARTIFACTS/other/ZH_converted.lhe DecayMode1=1
    #H+J
    - ./JHUGen PDFSet=3 Process=62 VegasNc0=100000 VegasNc2=10000 DataFile=$CIRCLE_ARTIFACTS/other/HJ
    #ttH, bbH, tH
    - ./JHUGen PDFSet=3 Process=80  VegasNc0=100000 VegasNc2=100 DataFile=$CIRCLE_ARTIFACTS/other/ttH DecayMode1=11 DecayMode2=11 TopDK=1
    - ./JHUGen PDFSet=3 Process=90  VegasNc0=100000 VegasNc2=10  DataFile=$CIRCLE_ARTIFACTS/other/gg_bbH PChannel=0
    - ./JHUGen PDFSet=3 Process=90  VegasNc0=100000 VegasNc2=10  DataFile=$CIRCLE_ARTIFACTS/other/qq_bbH PChannel=1
    - ./JHUGen PDFSet=3 Process=110 VegasNc0=100000 VegasNc2=100 DataFile=$CIRCLE_ARTIFACTS/other/tH_t    DecayMode1=11 TopDK=1
    - ./JHUGen PDFSet=3 Process=111 VegasNc0=100000 VegasNc2=100 DataFile=$CIRCLE_ARTIFACTS/other/tbarH_t DecayMode1=11 TopDK=1 MReso=750 GaReso=247
    - ./JHUGen PDFSet=3 Process=112 VegasNc0=100000 VegasNc2=100 DataFile=$CIRCLE_ARTIFACTS/other/tH_s    DecayMode1=11 TopDK=1
    - ./JHUGen PDFSet=3 Process=113 VegasNc0=100000 VegasNc2=100 DataFile=$CIRCLE_ARTIFACTS/other/tbarH_s DecayMode1=11 TopDK=1
    - ./JHUGen PDFSet=3 Process=114 VegasNc0=100000 VegasNc2=100 DataFile=$CIRCLE_ARTIFACTS/other/tH_all  DecayMode1=11 TopDK=1
    #Decays for t(t)H which have complicated quarks, to check colors
    - ./JHUGen PDFSet=3 VegasNc0=100000            DecayMode1=1 DecayMode2=1 ReadLHE=$CIRCLE_ARTIFACTS/other/ttH.lhe DataFile=$CIRCLE_ARTIFACTS/other/ttH_ZZ
    - ./JHUGen PDFSet=3 VegasNc0=100000 TauDK=1    DecayMode1=5 DecayMode2=5 ReadLHE=$CIRCLE_ARTIFACTS/other/ttH.lhe DataFile=$CIRCLE_ARTIFACTS/other/ttH_tautau
    - ./JHUGen PDFSet=3 VegasNc0=100000            DecayMode1=5 DecayMode2=5 ReadLHE=$CIRCLE_ARTIFACTS/other/tH_t.lhe DataFile=$CIRCLE_ARTIFACTS/other/tH_t_WW
    - ./JHUGen PDFSet=3 VegasNc0=100000            DecayMode1=1 DecayMode2=1 ReadLHE=$CIRCLE_ARTIFACTS/other/tbarH_t.lhe DataFile=$CIRCLE_ARTIFACTS/other/tbarH_t_ZZ
    - ./JHUGen PDFSet=3 VegasNc0=100000 TauDK=1    DecayMode1=5 DecayMode2=5 ReadLHE=$CIRCLE_ARTIFACTS/other/tH_s.lhe DataFile=$CIRCLE_ARTIFACTS/other/tH_s_tautau
    - ./JHUGen PDFSet=3 VegasNc0=100000 ghzgs2=1,0 DecayMode1=0 DecayMode2=7 ReadLHE=$CIRCLE_ARTIFACTS/other/tH_all.lhe DataFile=$CIRCLE_ARTIFACTS/other/tH_all_Zgamma.lhe
    #make sure that the mass was read correctly and the interference determined
    - "grep -q 'Interference: T' $CIRCLE_ARTIFACTS/other/ttH_ZZ.lhe"
    - "grep -q 'Interference: F' $CIRCLE_ARTIFACTS/other/tbarH_t_ZZ.lhe"

    #generate with 0 interference and make plots
    - ./JHUGen PDFSet=3 VegasNc0=1000000 VegasNc2=10000 Interf=0 DataFile=$CIRCLE_ARTIFACTS/ggH/SM
    - analyzer fileLevel=0 outdir=$CIRCLE_ARTIFACTS/ggH/ outfile=SM.root indir=$CIRCLE_ARTIFACTS/ggH/ computeVBFProdAngles=1 computeVHProdAngles=1 SM.lhe

    - ./JHUGen PDFSet=3 Process=60 VegasNc0=10000000 VegasNc2=10000 DataFile=$CIRCLE_ARTIFACTS/VBF/SM pTjetcut=0 deltaRcut=0
    - ./JHUGen PDFSet=3 VegasNc0=100000 DecayMode1=8 DecayMode2=8 Interf=0 ReadLHE=$CIRCLE_ARTIFACTS/VBF/SM.lhe DataFile=$CIRCLE_ARTIFACTS/VBF/SM_decayed
    - analyzer fileLevel=0 outdir=$CIRCLE_ARTIFACTS/VBF/ outfile=SM.root indir=$CIRCLE_ARTIFACTS/VBF/ computeVBFProdAngles=1 computeVHProdAngles=1 SM_decayed.lhe
    - ./JHUGen PDFSet=3 Process=61 VegasNc0=10000000 VegasNc2=10000 DataFile=$CIRCLE_ARTIFACTS/HJJ/SM
    - ./JHUGen PDFSet=3 VegasNc0=100000 DecayMode1=8 DecayMode2=8 Interf=0 ReadLHE=$CIRCLE_ARTIFACTS/HJJ/SM.lhe DataFile=$CIRCLE_ARTIFACTS/HJJ/SM_decayed
    - analyzer fileLevel=0 outdir=$CIRCLE_ARTIFACTS/HJJ/ outfile=SM.root indir=$CIRCLE_ARTIFACTS/HJJ/ computeVBFProdAngles=1 computeVHProdAngles=1 SM_decayed.lhe

    #pseudoscalar
    - ./JHUGen PDFSet=3 VegasNc0=1000000 VegasNc2=10000 Interf=0 DataFile=$CIRCLE_ARTIFACTS/ggH/PS ghz1=0,0 ghz4=1,0
    - analyzer fileLevel=0 outdir=$CIRCLE_ARTIFACTS/ggH/ outfile=PS.root indir=$CIRCLE_ARTIFACTS/ggH/ computeVBFProdAngles=1 computeVHProdAngles=1 PS.lhe

    - ./JHUGen PDFSet=3 Process=60 VegasNc0=10000000 VegasNc2=10000 DataFile=$CIRCLE_ARTIFACTS/VBF/PS ghz1=0,0 ghz4=1,0  pTjetcut=0 deltaRcut=0
    - ./JHUGen PDFSet=3 VegasNc0=100000 DecayMode1=8 DecayMode2=8 Interf=0 ReadLHE=$CIRCLE_ARTIFACTS/VBF/PS.lhe DataFile=$CIRCLE_ARTIFACTS/VBF/PS_decayed ghz1=0,0 ghz4=1,0
    - analyzer fileLevel=0 outdir=$CIRCLE_ARTIFACTS/VBF/ outfile=PS.root indir=$CIRCLE_ARTIFACTS/VBF/ computeVBFProdAngles=1 computeVHProdAngles=1 PS_decayed.lhe

    #ggH mixtures - don't need this every time, so need to manually ssh in and enable this by touching ~/mixtures
    - if [ -f ~/mixtures ]; then ./JHUGen PDFSet=3 VegasNc0=1000000 VegasNc2=10000 Interf=0 DataFile=$CIRCLE_ARTIFACTS/ggH/fa30.5 ghz1=1,0 ghz4=2.55052,0; fi
    - if [ -f ~/mixtures ]; then analyzer fileLevel=0 outdir=$CIRCLE_ARTIFACTS/ggH/ outfile=fa30.5.root indir=$CIRCLE_ARTIFACTS/ggH/ computeVBFProdAngles=1 computeVHProdAngles=1 fa30.5.lhe; fi
    - if [ -f ~/mixtures ]; then ./JHUGen PDFSet=3 VegasNc0=1000000 VegasNc2=10000 Interf=0 DataFile=$CIRCLE_ARTIFACTS/ggH/fa30.5i ghz1=1,0 ghz4=0,2.55052; fi
    - if [ -f ~/mixtures ]; then analyzer fileLevel=0 outdir=$CIRCLE_ARTIFACTS/ggH/ outfile=fa30.5i.root indir=$CIRCLE_ARTIFACTS/ggH/ computeVBFProdAngles=1 computeVHProdAngles=1 fa30.5i.lhe; fi

    #a2
    - ./JHUGen PDFSet=3 VegasNc0=1000000 VegasNc2=10000 Interf=0 DataFile=$CIRCLE_ARTIFACTS/ggH/a2 ghz1=0,0 ghz2=1,0
    - analyzer fileLevel=0 outdir=$CIRCLE_ARTIFACTS/ggH/ outfile=a2.root indir=$CIRCLE_ARTIFACTS/ggH/ computeVBFProdAngles=1 computeVHProdAngles=1 a2.lhe

    - ./JHUGen PDFSet=3 Process=60 VegasNc0=10000000 VegasNc2=10000 DataFile=$CIRCLE_ARTIFACTS/VBF/a2 ghz1=0,0 ghz2=1,0 pTjetcut=0 deltaRcut=0
    - ./JHUGen PDFSet=3 VegasNc0=100000 DecayMode1=8 DecayMode2=8 Interf=0 ReadLHE=$CIRCLE_ARTIFACTS/VBF/a2.lhe DataFile=$CIRCLE_ARTIFACTS/VBF/a2_decayed ghz1=0,0 ghz2=1,0
    - analyzer fileLevel=0 outdir=$CIRCLE_ARTIFACTS/VBF/ outfile=a2.root indir=$CIRCLE_ARTIFACTS/VBF/ computeVBFProdAngles=1 computeVHProdAngles=1 a2_decayed.lhe

    #now test with LHAPDF
    - sed -i -r -e "s/(UseLHAPDF *= *)No/\1Yes/" makefile
    - make clean
    - make
    - ./JHUGen LHAPDF=NNPDF30_lo_as_0130/NNPDF30_lo_as_0130.info Process=50 VegasNc0=100000 VegasNc2=100 DataFile=$CIRCLE_ARTIFACTS/other/ZH_LHAPDF DecayMode1=9
    - ./JHUGen VegasNc0=100000 DecayMode1=11 DecayMode2=11 ReadLHE=$CIRCLE_ARTIFACTS/other/ZH_LHAPDF.lhe DataFile=$CIRCLE_ARTIFACTS/other/ZH_LHAPDF_WW
    - ./JHUGen VegasNc0=100000 TauDK=0                     ReadLHE=$CIRCLE_ARTIFACTS/other/ZH_LHAPDF.lhe DataFile=$CIRCLE_ARTIFACTS/other/ZH_LHAPDF_tautau

    #make sure MELA compiles and runs
    - ./testC:
        pwd:
          ../JHUGenMELA
    - ./testF:
        pwd:
          ../JHUGenMELA
    #should check that all the "should be" ME's are correct...
    #make sure JHUGen compiles with linkMELA
    - sed -i -r -e "s/(linkMELA *= *)No/\1Yes/" makefile
    - make clean
    - make


  post:
    - unbuffer python ~/checklhe/checklhe.py $(find $CIRCLE_ARTIFACTS -name *.lhe) | tee checklheoutput.txt
    #if there are any errors this command will exit 1 and so the test will fail
    - "! grep -q '!' checklheoutput.txt"    #all the error messages end with !

    #ggH analytical fits
    - cd ~/CMSJHU_AnalysisMacros/ZZ4lanalyticalfits && echo -e '.x loadLib.C\n.x angularDistributions_spin0.C+("$CIRCLE_ARTIFACTS/ggH/SM.root", "$CIRCLE_ARTIFACTS/ggH/SM/", 1, 0, 0, 0, 0)' | root -b
    - cd ~/CMSJHU_AnalysisMacros/ZZ4lanalyticalfits && echo -e '.x loadLib.C\n.x angularDistributions_spin0.C+("$CIRCLE_ARTIFACTS/ggH/PS.root", "$CIRCLE_ARTIFACTS/ggH/PS/", 0, 0, 0, 1, 0)' | root -b
    - cd ~/CMSJHU_AnalysisMacros/ZZ4lanalyticalfits && echo -e '.x loadLib.C\n.x angularDistributions_spin0.C+("$CIRCLE_ARTIFACTS/ggH/a2.root", "$CIRCLE_ARTIFACTS/ggH/a2/", 0, 1, 0, 0, 0)' | root -b
    - if [ -f ~/mixtures ]; then cd ~/CMSJHU_AnalysisMacros/ZZ4lanalyticalfits && echo -e '.x loadLib.C\n.x angularDistributions_spin0.C+("$CIRCLE_ARTIFACTS/ggH/fa30.5.root", "$CIRCLE_ARTIFACTS/ggH/fa30.5/", 1, 2.55052, 0, 0, 0)' | root -b; fi
    - if [ -f ~/mixtures ]; then cd ~/CMSJHU_AnalysisMacros/ZZ4lanalyticalfits && echo -e '.x loadLib.C\n.x angularDistributions_spin0.C+("$CIRCLE_ARTIFACTS/ggH/fa30.5i.root", "$CIRCLE_ARTIFACTS/ggH/fa30.5i/", 1, 0, 2.55052, 0, 0)' | root -b; fi
    #VBF plots
    - cd ~/CMSJHU_AnalysisMacros/MCProductionValidation && root -b -q VBFplots.C+
